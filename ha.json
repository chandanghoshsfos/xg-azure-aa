{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "_artifactsLocation": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/sophos-iaas/xg-azure-aa/master/",
            "metadata": {
                "artifactsBaseUrl": "Base URL of the template package"
            }
        },
        "_artifactsLocationSasToken": {
          "type": "securestring",
          "metadata": {
              "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
          },
          "defaultValue": ""
        },
        "vmName": {
            "type": "string",
            "defaultValue": "XG-Firewall",
            "metadata": {
                "description": "Name for the Virtual Machine."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine."
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "payg-new"
            ],
            "metadata": {
                "description": "License type to use."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_F2s_v2",
            "metadata": {
                "description": "Size of the Virtual Machine."
            }
        },
        "netNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Virtual Network or use an existing one."
            }
        },
        "netRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The resource group of the new network. If using an existing network, this parameter is optional"
            }
        },
        "netName": {
            "type": "string",
            "defaultValue": "VNET",
            "metadata": {
                "description": "Name of the Virtual Network."
            }
        },
        "netPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0",
            "metadata": {
                "description": "Please provide the subnet value for the Virtual Network when creating a new vNet. Will be appended with /16."
            }
        },
        "wanName": {
            "type": "string",
            "defaultValue": "WAN",
            "metadata": {
                "description": "Name of the WAN side Subnet."
            }
        },
        "wanPrefix": {
            "type": "string",
            "defaultValue": "10.0.1.0",
            "metadata": {
                "description": "Please provide the subnet value for the WAN subnet when creating a new vNet. Will be appended with /24."
            }
        },
        "lanName": {
            "type": "string",
            "defaultValue": "LAN",
            "metadata": {
                "description": "Name of the LAN side Subnet."
            }
        },
        "lanPrefix": {
            "type": "string",
            "defaultValue": "10.0.2.0",
            "metadata": {
                "description": "Please provide the subnet value for the LAN subnet when creating a new vNet. Will be appended with /24."
            }
        },
        "LoadbalancerIntIP": {
            "type": "string",
            "defaultValue": "10.0.2.250",
            "metadata": {
                "description": "IP address for the internal Load Balancer."
            }
        },
        "publicIpRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group of existing Public IP (optional)."
            }
        },
        "publicIpName": {
            "type": "string",
            "defaultValue": "PublicIP",
            "metadata": {
                "description": "Name of the Public IP."
            }
        },
        "publicIpDNS": {
            "type": "string",
            "metadata": {
                "description": "Unique DNS name prefix for Public IP."
            }
        },
        "storageNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Storage Account or use an existing one."
            }
        },
        "storageRG": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group of existing Storage Account (optional)."
            }
        },
        "storageName": {
            "type": "string",
            "metadata": {
                "description": "Unique name for Storage Account."
            }
        },
        "storageType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "metadata": {
                "description": "Replication mode for Storage Account."
            }
        },
        "nicWan": {
            "type": "string",
            "defaultValue": "PortB",
            "metadata": {
                "description": "Network Interface Name for WAN Zone"
            }
        },
        "nicLan": {
            "type": "string",
            "defaultValue": "PortA",
            "metadata": {
                "description": "Network Interface Name for LAN Zone"
            }
        },
        "networkSecurityGroupNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Network Security Group or use an existing one."
            }
        },
        "networkSecurityGroupName": {
            "type": "string",
            "defaultValue": "SecurityGroup",
            "metadata": {
                "description": "Name of the Network Security Group"
            }
        },
        "trustedNetwork": {
            "type": "string",
            "defaultValue": "*",
            "metadata": {
                "description": "Trusted network for admin access. Using * will allow traffic from everywhere; using a CIDR notation, e.g., 203.0.113.0/24, will only allow traffic from that network range."
            }
        },
        "availabilitySetNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "description": "Create new Availability Set or use an existing one."
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue": "AvailabilitySet",
            "metadata": {
                "description": "Name of the Availability Set"
            }
        },
        "numberOfInstances": {
            "type": "int",
            "defaultValue": 2,
            "minValue": 1,
            "maxValue": 5,
            "metadata": {
                "description": "Number of XG Firewall instances to be deployed."
            }
        },
        "automationAccountNewOrExisting": {
            "type": "string",
            "allowedValues": [
                "new",
                "existing"
            ],
            "defaultValue": "new",
            "metadata": {
                "description": "Create a new Azure Automation account or select an existing account to use for XG automation. WARNING: Automation account names are unique, so reusing an account name when creating a new account will overwirte the existing account!."
            }
        },
        "automationAccountName": {
            "type": "string",
            "metadata": {
                "description": "Enter the name of the Azure Automation account you wish to use / create. Note that when creating a new account the account name must be between 6 to 50 characters, and can contain only letters, numbers, and hyphens."
            }
        },
        "automationAccountLocation": {
            "type": "string",
            "defaultValue": "[resourceGroup().Location]",
            "metadata": {
                "description": "Geo-Location you want to deploy your automation account to."
            }
        }
    },
    "variables": {
        "publicIpTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/publicip-new.json', parameters('_artifactsLocationSasToken')))]",
        "netTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vnet-',parameters('netNewOrExisting'),'.json', parameters('_artifactsLocationSasToken')))]",
        "storageTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/storageAccount-',parameters('storageNewOrExisting'),'.json', parameters('_artifactsLocationSasToken')))]",
        "availabilitySetTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/availabilitySet-',parameters('availabilitySetNewOrExisting'),'.json', parameters('_artifactsLocationSasToken')))]",
        "networkSecurityGroupTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/networkSecurityGroup-',parameters('networkSecurityGroupNewOrExisting'),'.json', parameters('_artifactsLocationSasToken')))]",
        "interfaceLBTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/interface-lb.json', parameters('_artifactsLocationSasToken')))]",
        "interfaceLBIntTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/interface-lbint.json', parameters('_artifactsLocationSasToken')))]",
        "vmTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vm.json', parameters('_artifactsLocationSasToken')))]",
        "LBTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/loadbalancer.json', parameters('_artifactsLocationSasToken')))]",
        "LBIntTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/loadbalancerint.json', parameters('_artifactsLocationSasToken')))]",
        "securityRuleAllowHTTPTemplate": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/inboundSecurityRuleAllowHttp.json', parameters('_artifactsLocationSasToken')))]",
        "apiVersion": {
            "resources": {
                "deployments": "2017-08-01"
            }
        },
        "accountTemplate": "[concat(parameters('_artifactsLocation'), concat('nestedtemplates/AAAccountTemplate-', parameters('automationAccountNewOrExisting'),'.json', parameters('_artifactsLocationSasToken')))]",
        "lanNetwork": "[substring(parameters('lanPrefix'),0,sub(length(parameters('lanPrefix')), 1))]",
        "location": "[resourceGroup().Location]"
    },
    "resources": [
        {
            "name": "SettingUpAvailabilitySet",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('availabilitySetTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "availabilitySetName": {
                        "value": "[parameters('availabilitySetName')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpStorageAccount",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "storageAccountName": {
                        "value": "[parameters('storageName')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageType')]"
                    },
                    "storageAccountExistingRG": {
                        "value": "[parameters('storageRG')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpNetworkSecurityGroup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('networkSecurityGroupTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSecurityGroupName": {
                        "value": "[parameters('networkSecurityGroupName')]"
                    },
                    "trustedNetwork": {
                        "value": "[parameters('trustedNetwork')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpSecurityRuleAllowHTTP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpNetworkSecurityGroup')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('securityRuleAllowHTTPTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSecurityGroupName": {
                        "value": "[parameters('networkSecurityGroupName')]"
                    },
                    "trustedNetwork": {
                        "value": "*"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpPublicIP",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('publicIpTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "publicIPAddressName": {
                        "value": "[parameters('publicIpName')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('publicIpDNS')]"
                    },
                    "publicIpRGName": {
                        "value": "[parameters('publicIpRG')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpVirtualNetwork",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('netTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[parameters('netName')]"
                    },
                    "virtualNetworkAddressPrefix": {
                        "value": "[concat(parameters('netPrefix'),'/16')]"
                    },
                    "Subnet1Name": {
                        "value": "[parameters('wanName')]"
                    },
                    "Subnet1Prefix": {
                        "value": "[concat(parameters('wanPrefix'),'/24')]"
                    },
                    "Subnet2Name": {
                        "value": "[parameters('lanName')]"
                    },
                    "Subnet2Prefix": {
                        "value": "[concat(parameters('lanPrefix'),'/24')]"
                    },
                    "vnetExistingRGName": {
                        "value": "[parameters('netRG')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpLoadbalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpPublicIP')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('LBTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "publicIpId": {
                        "value": "[reference('SettingUpPublicIP').outputs.publicIpId.value]"
                    },
                    "loadBalancerName": {
                        "value": "Loadbalancer"
                    },
                    "numberOfInstances": {
                        "value": "[parameters('numberOfInstances')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "[concat('SettingUpInterfaceWan', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "copy": {
                "name": "InterfaceWanLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpLoadbalancer')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpNetworkSecurityGroup')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('interfaceLBTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "interfaceName": {
                        "value": "[concat(parameters('nicWan'),'-', copyIndex())]"
                    },
                    "subnetRef": {
                        "value": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet1Ref.value]"
                    },
                    "lbBackendID": {
                        "value": "[reference('SettingUpLoadbalancer').outputs.lbBackendID.value]"
                    },
                    "inboundNatID": {
                        "value": "[concat(reference('SettingUpLoadbalancer').outputs.inboundNatIDPrefix.value, copyIndex())]"
                    },
                    "inboundNatSshID": {
                        "value": "[concat(reference('SettingUpLoadbalancer').outputs.inboundNatSshIDPrefix.value, copyIndex())]"
                    },
                    "networkSecurityGroupId": {
                        "value": "[reference('SettingUpNetworkSecurityGroup','2015-01-01').outputs.networkSecurityGroupName.value]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpIntLoadbalancer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('LBIntTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "subnetRef": {
                        "value": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet2Ref.value]"
                    },
                    "privateIP": {
                        "value": "[parameters('LoadbalancerIntIP')]"
                    },
                    "loadBalancerName": {
                        "value": "InternalLoadbalancer"
                    },
                    "numberOfInstances": {
                        "value": "[parameters('numberOfInstances')]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "[concat('SettingUpInterfaceLan', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "copy": {
                "name": "InterfaceLanLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVirtualNetwork')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('interfaceLBIntTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "interfaceName": {
                        "value": "[concat(parameters('nicLan'),'-', copyIndex())]"
                    },
                    "subnetRef": {
                        "value": "[reference('SettingUpVirtualNetwork','2015-01-01').outputs.subnet2Ref.value]"
                    },
                    "lbBackendID": {
                        "value": "[reference('SettingUpIntLoadbalancer').outputs.lbBackendID.value]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "[concat('SettingUpVm', copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "[variables('apiVersion').resources.deployments]",
            "copy": {
                "name": "VmLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[if(equals(copyIndex(), 0), concat('Microsoft.Resources/deployments/', 'SettingUpPublicIP'), concat('Microsoft.Resources/deployments/','SettingUpVm',sub(copyIndex(), 1) ))]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpInterfaceWan', copyIndex())]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpInterfaceLan', copyIndex())]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpStorageAccount')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpAvailabilitySet')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmName": {
                        "value": "[concat(parameters('vmName'),'-', copyIndex())]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "imageSku": {
                        "value": "[parameters('imageSku')]"
                    },
                    "availabilitySetId": {
                        "value": "[reference('SettingUpAvailabilitySet').outputs.availabilitySetId.value]"
                    },
                    "storageAccountEndpoint": {
                        "value": "[reference('SettingUpStorageAccount').outputs.storageAccountEndpoint.value]"
                    },
                    "interfaceRefWan": {
                        "value": "[reference(concat('SettingUpInterfaceWan', copyIndex()),'2015-01-01').outputs.interfaceRef.value]"
                    },
                    "interfaceRefLan": {
                        "value": "[reference(concat('SettingUpInterfaceLan', copyIndex()),'2015-01-01').outputs.interfaceRef.value]"
                    },
                    "location": {
                        "value": "[variables('location')]"
                    }
                }
            }
        },
        {
            "name": "SettingUpAutomationAccount",
            "apiVersion": "2015-01-01",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "incremental",
                "templateLink": {
                    "uri": "[variables('accountTemplate')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "accountName": {
                        "value": "[parameters('automationAccountName')]"
                    },
                    "accountLocation": {
                        "value": "[parameters('automationAccountLocation')]"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('automationAccountName'),'/RunbookJob',copyIndex())]",
            "type": "Microsoft.Automation/automationAccounts/jobs",
            "apiVersion": "2017-05-15-preview",
            "copy": {
                "name": "JobLoop",
                "count": "[parameters('numberOfInstances')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Resources/deployments/', 'SettingUpAutomationAccount')]",
                "[concat('Microsoft.Resources/deployments/', 'SettingUpVm', copyIndex())]"
            ],
            "properties": {
                "runbook": {
                    "name": "[reference('SettingUpAutomationAccount').outputs.runbookRef.value]"
                },
                "parameters": {
                    "password": "[parameters('adminPassword')]",
                    "portaip": "[reference(concat('SettingUpInterfaceLan', copyIndex()),'2015-01-01').outputs.privateIp.value]",
                    "portagw": "[concat(variables('lanNetwork'),'1')]",
                    "hostname": "[reference('SettingUpPublicIP').outputs.fqdn.value]",
                    "sshport": "[copyIndex(2222)]"
                }
            }
        }
    ],
    "outputs": {
        "fqdn": {
            "value": "[reference('SettingUpPublicIP').outputs.fqdn.value]",
            "type": "string"
        }
    }
}
